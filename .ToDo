todo: Make gettext_lazy for verbose_names, Meta, plural, plurals and so on

todo: Move outside all CRUD superuser methods to outer method or function
user_is_superuser = request.user.is_superuser
        if not user_is_superuser:
            return Response(
                status=status.HTTP_403_FORBIDDEN,
                data={"message": gettext_lazy(NOT_SUPERUSER_FORBIDDEN)})

todo: Make creator field in User model basing on User.id, settle cycle error
creator = models.ForeignKey(User, on_delete=models.PROTECT,
                            verbose_name=gettext_lazy(CREATOR))

todo: Settle the question of the cycle error in the field Creator (referring to
todo: User model) in models User, Administrator, Coach, Client

todo: Add auto fields (email, username, nickname) in Creator model

todo: Add fields to admin panel

todo: Note: You are 3 hours ahead of server time.
Date:  Today |
Time:  Now |

todo: Settle the showing image path in admin panel, field is not callable,
todo: but record can be edited and saved without problems
class SelfSatisfactionLevelAdmin(admin.ModelAdmin):
    list_display = ["id",
                    # "icon",
                    "value",
                    "name",
                    "description",
                    "created_at",
                    "updated_at",
                    "creator",
                    ]

todo: Review: Remove all unnecessary comments in final variant
todo: Review: Remove id fields from admin models and serializers
todo: Review: Remove commented possible options from all admin panel models

WORKS BY DEFAULT: todo: Limit images type for saving in projects (jpeg, png, jpg)

WORKS BY DEFAULT: todo: Make User.last_login saving data, if not auto
WORKS BY DEFAULT: todo: Add VerboseNames to User

SETTLED ANOTHER WAY: todo: Settle the question with proxy or auto-generated class doubling User,
SETTLED ANOTHER WAY: todo: to define Creator without cycling error


SETTLED ANOTHER WAY: todo: Make auto-creation Creator instance when User created, and deleting
SETTLED ANOTHER WAY: todo: in reverse order (probably via signals)

DONE: todo: Create checking the size of the image file before saving in db to protect
DONE: todo: overloading the server space

todo: EmotionalLevel: Fix image auto renaming with hash, fix replacing the
todo: image without hash, add deleting img by model signal

todo: SelfSatisfactionLevel: Fix image auto renaming with hash, fix replacing the
todo: image without hash, add deleting img by model signal

DONE: todo: Fix choice of the user field when creating Administrator. Only user with
DONE: todo: is_staff=True can be choiced

DONE: todo: Fix creator is current user only in AdministratorAdmin

DONE: todo: Fix deleting file when deleting via update with flag (change)

todo: Logging utils and saving logging info in db and JSON

todo: Rename ERROR_MESSAGES => error_messaes
todo: Change to error_messages_str = " /// ".join(error_messages)

DONE: Fix new user creation, password validation and password hashing via
custom admin panel and form

todo: Refactor getting queryset once and using it methods later on, when
todo: getting relative fields in admin panel (Administrator, Client, Coach
todo: and so on)

todo: For all reference books add method get_foreign_key() for creator to
todo: limit the choice by the current user

todo: Make direct fields is_administrator, is_coach, is_client to
todo: to exclude complex combinations of is_staff, is_superuser, is_trainer

todo: Make search by administrator_creator, client_creator, coach_creator
todo: __str__ names (or at least by username, nickname, email)

todo: Check and fix search, filter error in all reference books
todo: Unsupported lookup 'icontains' for ForeignKey or join on the field not permitted.

todo: Attach all administrators, clients and coaches to the department

todo: Define order for all models

todo: Define search fields for all models, where not defined

todo: Admin panel: Make custom grouping

todo: Admin panel: Remove underline

todo: Fix validators for GroupClientPayment, amount or refund not null
todo: clean()

todo: Fix validators for GroupClientProgerss, all progress parameters
todo: clean()

todo: Fix admin list_display and search_list in GroupClientProgress

todo: Fix image validation in serializer:
todo: model: <class 'django.db.models.fields.files.ImageFieldFile'>
todo: serializer <class 'django.core.files.uploadedfile.InMemoryUploadedFile'>
todo: serializer sends to the model another type of field value (differing
todo: from the model ImageField type), so the error occurs
todo: try-except plug was set temporary
